name: 🚀 Deploy to Remote Server

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "♻️ Environment Configuration Name"
        required: true
      docker-image-version:
        description: "🏷️ Docker image version (DEFAULT latest)"
        required: true
        default: "latest"

jobs:
  pull-and-deploy:
    runs-on: ubuntu-latest

    environment:
      name: ${{ inputs.environment }}

    steps:
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_IPV4 }} >> ~/.ssh/known_hosts

    - name: Deploy on Remote Server
      run: |
        ssh -T -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IPV4 }} << EOF
        # Disable 'set -e' for more control
        set +e

        echo "Logging into Docker..."
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        
        echo "Pulling Docker image..."
        docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ inputs.docker-image-version }}
        
        echo "Stopping existing container (if any)..."
        docker stop ${{ secrets.CONTAINER_NAME }} || true
        docker rm ${{ secrets.CONTAINER_NAME }} || true
        
        echo "Starting new Docker container..."
        echo ${{ secrets.CONTAINER_NAME }}
        docker run -d --name ${{ secrets.CONTAINER_NAME }} \
          -e TW_TOKEN="${{ secrets.TW_TOKEN }}" \
          -p 7210:7210/tcp \
          -p 7210:7210/udp \
          ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ inputs.docker-image-version }}

        echo "Checking running containers..."
        docker ps
        
        echo "Deployment completed successfully."
        EOF